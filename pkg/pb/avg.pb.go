// Code generated by protoc-gen-go. DO NOT EDIT.
// source: avg.proto

package avg

import (
	context "context"
	fmt "fmt"
	proto "github.com/golang/protobuf/proto"
	grpc "google.golang.org/grpc"
	codes "google.golang.org/grpc/codes"
	status "google.golang.org/grpc/status"
	math "math"
)

// Reference imports to suppress errors if they are not otherwise used.
var _ = proto.Marshal
var _ = fmt.Errorf
var _ = math.Inf

// This is a compile-time assertion to ensure that this generated file
// is compatible with the proto package it is being compiled against.
// A compilation error at this line likely means your copy of the
// proto package needs to be updated.
const _ = proto.ProtoPackageIsVersion3 // please upgrade the proto package

type IntArrayRequest struct {
	Data                 []int32  `protobuf:"varint,1,rep,packed,name=data,proto3" json:"data,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *IntArrayRequest) Reset()         { *m = IntArrayRequest{} }
func (m *IntArrayRequest) String() string { return proto.CompactTextString(m) }
func (*IntArrayRequest) ProtoMessage()    {}
func (*IntArrayRequest) Descriptor() ([]byte, []int) {
	return fileDescriptor_b889feec73713d05, []int{0}
}

func (m *IntArrayRequest) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_IntArrayRequest.Unmarshal(m, b)
}
func (m *IntArrayRequest) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_IntArrayRequest.Marshal(b, m, deterministic)
}
func (m *IntArrayRequest) XXX_Merge(src proto.Message) {
	xxx_messageInfo_IntArrayRequest.Merge(m, src)
}
func (m *IntArrayRequest) XXX_Size() int {
	return xxx_messageInfo_IntArrayRequest.Size(m)
}
func (m *IntArrayRequest) XXX_DiscardUnknown() {
	xxx_messageInfo_IntArrayRequest.DiscardUnknown(m)
}

var xxx_messageInfo_IntArrayRequest proto.InternalMessageInfo

func (m *IntArrayRequest) GetData() []int32 {
	if m != nil {
		return m.Data
	}
	return nil
}

type IntResponse struct {
	Result               int32    `protobuf:"varint,1,opt,name=result,proto3" json:"result,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *IntResponse) Reset()         { *m = IntResponse{} }
func (m *IntResponse) String() string { return proto.CompactTextString(m) }
func (*IntResponse) ProtoMessage()    {}
func (*IntResponse) Descriptor() ([]byte, []int) {
	return fileDescriptor_b889feec73713d05, []int{1}
}

func (m *IntResponse) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_IntResponse.Unmarshal(m, b)
}
func (m *IntResponse) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_IntResponse.Marshal(b, m, deterministic)
}
func (m *IntResponse) XXX_Merge(src proto.Message) {
	xxx_messageInfo_IntResponse.Merge(m, src)
}
func (m *IntResponse) XXX_Size() int {
	return xxx_messageInfo_IntResponse.Size(m)
}
func (m *IntResponse) XXX_DiscardUnknown() {
	xxx_messageInfo_IntResponse.DiscardUnknown(m)
}

var xxx_messageInfo_IntResponse proto.InternalMessageInfo

func (m *IntResponse) GetResult() int32 {
	if m != nil {
		return m.Result
	}
	return 0
}

type FloatArrayRequest struct {
	Data                 []float32 `protobuf:"fixed32,1,rep,packed,name=data,proto3" json:"data,omitempty"`
	XXX_NoUnkeyedLiteral struct{}  `json:"-"`
	XXX_unrecognized     []byte    `json:"-"`
	XXX_sizecache        int32     `json:"-"`
}

func (m *FloatArrayRequest) Reset()         { *m = FloatArrayRequest{} }
func (m *FloatArrayRequest) String() string { return proto.CompactTextString(m) }
func (*FloatArrayRequest) ProtoMessage()    {}
func (*FloatArrayRequest) Descriptor() ([]byte, []int) {
	return fileDescriptor_b889feec73713d05, []int{2}
}

func (m *FloatArrayRequest) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_FloatArrayRequest.Unmarshal(m, b)
}
func (m *FloatArrayRequest) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_FloatArrayRequest.Marshal(b, m, deterministic)
}
func (m *FloatArrayRequest) XXX_Merge(src proto.Message) {
	xxx_messageInfo_FloatArrayRequest.Merge(m, src)
}
func (m *FloatArrayRequest) XXX_Size() int {
	return xxx_messageInfo_FloatArrayRequest.Size(m)
}
func (m *FloatArrayRequest) XXX_DiscardUnknown() {
	xxx_messageInfo_FloatArrayRequest.DiscardUnknown(m)
}

var xxx_messageInfo_FloatArrayRequest proto.InternalMessageInfo

func (m *FloatArrayRequest) GetData() []float32 {
	if m != nil {
		return m.Data
	}
	return nil
}

type FloatResponse struct {
	Result               float32  `protobuf:"fixed32,1,opt,name=result,proto3" json:"result,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *FloatResponse) Reset()         { *m = FloatResponse{} }
func (m *FloatResponse) String() string { return proto.CompactTextString(m) }
func (*FloatResponse) ProtoMessage()    {}
func (*FloatResponse) Descriptor() ([]byte, []int) {
	return fileDescriptor_b889feec73713d05, []int{3}
}

func (m *FloatResponse) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_FloatResponse.Unmarshal(m, b)
}
func (m *FloatResponse) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_FloatResponse.Marshal(b, m, deterministic)
}
func (m *FloatResponse) XXX_Merge(src proto.Message) {
	xxx_messageInfo_FloatResponse.Merge(m, src)
}
func (m *FloatResponse) XXX_Size() int {
	return xxx_messageInfo_FloatResponse.Size(m)
}
func (m *FloatResponse) XXX_DiscardUnknown() {
	xxx_messageInfo_FloatResponse.DiscardUnknown(m)
}

var xxx_messageInfo_FloatResponse proto.InternalMessageInfo

func (m *FloatResponse) GetResult() float32 {
	if m != nil {
		return m.Result
	}
	return 0
}

func init() {
	proto.RegisterType((*IntArrayRequest)(nil), "avg.IntArrayRequest")
	proto.RegisterType((*IntResponse)(nil), "avg.IntResponse")
	proto.RegisterType((*FloatArrayRequest)(nil), "avg.FloatArrayRequest")
	proto.RegisterType((*FloatResponse)(nil), "avg.FloatResponse")
}

func init() { proto.RegisterFile("avg.proto", fileDescriptor_b889feec73713d05) }

var fileDescriptor_b889feec73713d05 = []byte{
	// 170 bytes of a gzipped FileDescriptorProto
	0x1f, 0x8b, 0x08, 0x00, 0x00, 0x00, 0x00, 0x00, 0x02, 0xff, 0xe2, 0xe2, 0x4c, 0x2c, 0x4b, 0xd7,
	0x2b, 0x28, 0xca, 0x2f, 0xc9, 0x17, 0x62, 0x4e, 0x2c, 0x4b, 0x57, 0x52, 0xe5, 0xe2, 0xf7, 0xcc,
	0x2b, 0x71, 0x2c, 0x2a, 0x4a, 0xac, 0x0c, 0x4a, 0x2d, 0x2c, 0x4d, 0x2d, 0x2e, 0x11, 0x12, 0xe2,
	0x62, 0x49, 0x49, 0x2c, 0x49, 0x94, 0x60, 0x54, 0x60, 0xd6, 0x60, 0x0d, 0x02, 0xb3, 0x95, 0x54,
	0xb9, 0xb8, 0x3d, 0xf3, 0x4a, 0x82, 0x52, 0x8b, 0x0b, 0xf2, 0xf3, 0x8a, 0x53, 0x85, 0xc4, 0xb8,
	0xd8, 0x8a, 0x52, 0x8b, 0x4b, 0x73, 0x4a, 0x24, 0x18, 0x15, 0x18, 0x35, 0x58, 0x83, 0xa0, 0x3c,
	0x25, 0x75, 0x2e, 0x41, 0xb7, 0x9c, 0xfc, 0x44, 0xdc, 0xe6, 0x31, 0x41, 0xcd, 0x53, 0xe7, 0xe2,
	0x05, 0x2b, 0xc4, 0x61, 0x22, 0x13, 0xcc, 0x44, 0x23, 0x4b, 0x2e, 0x66, 0xc7, 0xb2, 0x74, 0x21,
	0x23, 0x2e, 0x16, 0xdf, 0xd4, 0xc4, 0x3c, 0x21, 0x11, 0x3d, 0x90, 0xfb, 0xd1, 0x5c, 0x2c, 0x25,
	0x04, 0x16, 0x45, 0x31, 0x50, 0x89, 0x21, 0x89, 0x0d, 0xec, 0x4d, 0x63, 0x40, 0x00, 0x00, 0x00,
	0xff, 0xff, 0x26, 0x1e, 0xdc, 0x49, 0xf3, 0x00, 0x00, 0x00,
}

// Reference imports to suppress errors if they are not otherwise used.
var _ context.Context
var _ grpc.ClientConn

// This is a compile-time assertion to ensure that this generated file
// is compatible with the grpc package it is being compiled against.
const _ = grpc.SupportPackageIsVersion4

// AvgClient is the client API for Avg service.
//
// For semantics around ctx use and closing/ending streaming RPCs, please refer to https://godoc.org/google.golang.org/grpc#ClientConn.NewStream.
type AvgClient interface {
	// Calculates mean average
	Mean(ctx context.Context, in *IntArrayRequest, opts ...grpc.CallOption) (*FloatResponse, error)
}

type avgClient struct {
	cc *grpc.ClientConn
}

func NewAvgClient(cc *grpc.ClientConn) AvgClient {
	return &avgClient{cc}
}

func (c *avgClient) Mean(ctx context.Context, in *IntArrayRequest, opts ...grpc.CallOption) (*FloatResponse, error) {
	out := new(FloatResponse)
	err := c.cc.Invoke(ctx, "/avg.Avg/Mean", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

// AvgServer is the server API for Avg service.
type AvgServer interface {
	// Calculates mean average
	Mean(context.Context, *IntArrayRequest) (*FloatResponse, error)
}

// UnimplementedAvgServer can be embedded to have forward compatible implementations.
type UnimplementedAvgServer struct {
}

func (*UnimplementedAvgServer) Mean(ctx context.Context, req *IntArrayRequest) (*FloatResponse, error) {
	return nil, status.Errorf(codes.Unimplemented, "method Mean not implemented")
}

func RegisterAvgServer(s *grpc.Server, srv AvgServer) {
	s.RegisterService(&_Avg_serviceDesc, srv)
}

func _Avg_Mean_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(IntArrayRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(AvgServer).Mean(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/avg.Avg/Mean",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(AvgServer).Mean(ctx, req.(*IntArrayRequest))
	}
	return interceptor(ctx, in, info, handler)
}

var _Avg_serviceDesc = grpc.ServiceDesc{
	ServiceName: "avg.Avg",
	HandlerType: (*AvgServer)(nil),
	Methods: []grpc.MethodDesc{
		{
			MethodName: "Mean",
			Handler:    _Avg_Mean_Handler,
		},
	},
	Streams:  []grpc.StreamDesc{},
	Metadata: "avg.proto",
}
