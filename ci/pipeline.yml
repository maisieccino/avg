resource_types:
  - name: pull-request
    type: docker-image
    source:
      repository: teliaoss/github-pr-resource

# groups:
#   - name: dev
#     jobs:
#       - build-dev
#   - name: pr
#     jobs:
#       - pr-build-img
#   - name: release
#     jobs:
#       - release-patch
#       - release-minor
#       - release-major

resources:
  - name: src
    type: git
    check_every: 24h
    webhook_token: ((git-webhook-token))
    source: &git
      uri: git@github.com:((git-repo)).git
      private_key: ((git-private-key))
      branch: master
  - name: pr
    type: pull-request
    check_every: 24h
    webhook_token: ((git-webhook-token))
    source:
      repository: ((git-repo))
      access_token: ((git-access-token))
  - name: img
    type: docker-image
    source:
      repository: ((git-repo))
      username: ((docker-user))
      password: ((docker-pass))
  - name: version
    type: semver
    source:
      driver: gcs
      bucket: avg.bell.wtf
      key: version
      json_key: ((gcs-json-key))
      inital-version: 0.1.0
  - name: golang-image
    type: docker-image
    source:
      repository: golang
      tag: 1.11-alpine
  - name: alpine-image
    type: docker-image
    source:
      repository: alpine
      tag: 3.9
  - name: gh-release
    type: github-release
    source:
      owner: mbellgb
      repository: avg
      access_token: ((git-access-token))

jobs:
  - name: build-dev
    serial: true
    plan:
      - get: src
        trigger: true
      - get: version
        params: { pre: dev }
      - put: img
        params:
          tag_file: version/number
          build: src
        get_params: { skip_download: true }
      - put: version
        params: { file: version/number }
  - name: pr-build-img
    serial: true
    on_success:
      put: pr
      params:
        path: pr
        status: success
      get_params: { skip_download: true }
    on_failure:
      put: pr
      params:
        path: pr
        status: failure
      get_params: { skip_download: true }
    on_abort:
      put: pr
      params:
        path: pr
        status: failure
        comment: Pipeline was manually aborted.
      get_params: { skip_download: true }
    plan:
      - get: pr
        version: every
        trigger: true
      - put: pr
        params:
          path: pr
          status: pending
      - get: alpine-image
      - task: get-pr-number
        image: alpine-image
        config:
          platform: linux
          inputs: [{name: pr}]
          outputs: [{name: version}]
          run:
            path: /bin/sh
            args:
              - -xe
              - -c
              - |
                #!/bin/sh
                apk add --no-cache jq
                pr=$(jq -r '.[] | select(.name == "pr") | .value' < pr/.git/resource/metadata.json)
                echo "pr-${pr}" > version/number
      - put: img
        params:
          tag_file: version/number
          build: pr
        get_params: { skip_download: true }
  - name: release-patch
    serial: true
    plan:
      - get: version
        passed: [build-dev]
        params: { bump: patch }
      - get: src
      - get: img
      - get: golang-image
      - task: build-client-linux
        image: golang-image
        file: src/ci/tasks/build-client.yml
        output_mapping: { output: client-linux }
        params:
          os: linux
          arch: amd64
          version_file: version/number
      - task: build-client-darwin
        image: golang-image
        file: src/ci/tasks/build-client.yml
        output_mapping: { output: client-darwin }
        params:
          os: darwin
          arch: amd64
          version_file: version/number
      - put: img
        params:
          tag_file: version/number
          build: src
          cache: true
      - put: gh-release
        params:
          name: version/number
          tag: version/number
          commitish: src/.git/ref
          body: src/changelog.md
          globs: [ client-linux/avg-*, client-darwin/avg-* ]
      - put: version
        params: { file: version/number }
  - name: release-minor
    serial: true
    plan:
      - get: version
        passed: [build-dev]
        params: { bump: minor }
      - get: src
      - get: img
      - get: golang-image
      - task: build-client-linux
        image: golang-image
        file: src/ci/tasks/build-client.yml
        output_mapping: { output: client-linux }
        params:
          os: linux
          arch: amd64
          version_file: version/number
      - task: build-client-darwin
        image: golang-image
        file: src/ci/tasks/build-client.yml
        output_mapping: { output: client-darwin }
        params:
          os: darwin
          arch: amd64
          version_file: version/number
      - put: img
        params:
          build: src
          tag_file: version/number
          cache: true
      - put: gh-release
        params:
          name: version/number
          tag: version/number
          commitish: src/.git/ref
          body: src/changelog.md
          globs: [ client-linux/avg-*, client-darwin/avg-* ]
      - put: version
        params: { file: version/number }
  - name: release-major
    serial: true
    plan:
      - get: version
        passed: [build-dev]
        params: { bump: major }
      - get: src
      - get: img
      - get: golang-image
      - task: build-client-linux
        image: golang-image
        file: src/ci/tasks/build-client.yml
        output_mapping: { output: client-linux }
        params:
          os: linux
          arch: amd64
          version_file: version/number
      - task: build-client-darwin
        image: golang-image
        file: src/ci/tasks/build-client.yml
        output_mapping: { output: client-darwin }
        params:
          os: darwin
          arch: amd64
          version_file: version/number
      - put: img
        params:
          build: src
          tag_file: version/number
          cache: true
      - put: gh-release
        params:
          name: version/number
          tag: version/number
          commitish: src/.git/ref
          body: src/changelog.md
          globs: [ client-linux/avg-*, client-darwin/avg-* ]
      - put: version
        params: { file: version/number }